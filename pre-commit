#!/usr/bin/python3
import json
import os
import sys
import collections
gitstatus = "git submodule status"
gettag = "git ls-remote --tags https://cr.deepin.io/"

def store(data):
    with open('project_list.json','w+') as json_file:
        json_file.write(json.dumps(data, indent=4, sort_keys=False, ensure_ascii=False))
        json_file.close()

def main():
    listjson = os.popen("%s"%gitstatus).readlines()
    jsonlist = collections.OrderedDict()
   # jsonchangelist = {}
    for i in listjson:
        commit = i[1:41]
        tag = ""
        pro = i.split('/')[1].split(' ')[0].strip('\n')
        if "dde" in pro:
            tags = os.popen("%sdde/%s | grep %s"%(gettag, pro, commit)).readline()
            if tags == "":
                print("%s项目submodule引用不在tag上面,请确定提交内容是否正确"%pro)
            else:
                tag = tags.split('^{}')[0].split("tags/")[1].strip('\n')
        elif "lastore" in pro:
            tags = os.popen("%slastore/%s | grep %s"%(gettag, pro, commit)).readline()
            if tags == "":
                print("%s项目submodule引用不在tag上面,请确定提交内容是否正确"%pro)
            else:
                tag = tags.split('^{}')[0].split("tags/")[1].strip('\n')
        elif "appstore" in pro:
            tags = os.popen("%sdstore/%s | grep %s"%(gettag, pro, commit)).readline()
            if tags == "":
                print("%s项目submodule引用不在tag上面,请确定提交内容是否正确"%pro)
            else:
                tag = tags.split('^{}')[0].split("tags/")[1].strip('\n')
        else:
            tags = os.popen("%s%s | grep %s"%(gettag, pro, commit)).readline()
            if tags == "":
                print("%s项目submodule引用不在tag上面,请确定提交内容是否正确"%pro)
            else:
                tag = tags.split('^{}')[0].split("tags/")[1].strip('\n')
        dist = collections.OrderedDict()
        dist["commit"]=commit
        dist["tag"]=tag
        #jsonlist[pro]=dict(commit=commit,tag=tag)
        jsonlist[pro]=dist
       # with open('project_list.json','r') as json_file:
        #    if commit in json_file.read():
         #       continue
          #  else:
           #     jsonchangelist[pro]=dict(commit=commit,tag=tag)
           # json_file.close()
            
    store(jsonlist)
   # file = open("project_changelist.json","w+")
   # file.write(json.dumps(jsonchangelist, indent=4, sort_keys=False, ensure_ascii=False))
   # file.close

if __name__=='__main__':
    main()
    os.system("git add ./project_list.json")
    #os.system("git add ./project_changelist.json")

